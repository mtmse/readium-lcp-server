trigger:
- master

variables:
  appName_dev: 'LSDLCDserver'
  acrName_dev: 'lcslsdcontainer'
  resourceGroup_prod: 'App-Merkur-Prod'
  appName_prod: 'app-lcp-prod'
  acrName_prod: 'lcslsdcontainer'
  databaseUrl_prod: $(DATABASE_URL_PROD)
  dockerComposeFile: 'ci/docker-compose.yaml'
  containerRegistry: 'docker_lcp'

stages:
  - stage: BuildAndPush
    displayName: Build and Push with Docker Compose
    jobs:
      - job: Build
        displayName: Build and Push
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - script: |
              sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              docker-compose --version
            displayName: 'Install Docker Compose'

          # Log in to Azure Container Registry
          - task: Docker@2
            displayName: 'Login to ACR'
            inputs:
              command: 'login'
              containerRegistry: $(containerRegistry)

          # Build and Push using Docker Compose
          - script: |
              docker-compose -f $(dockerComposeFile) build
              docker-compose -f $(dockerComposeFile) push
            displayName: 'Build and Push Docker Compose Images'


  - stage: Deploy_Prod
    displayName: Deploy to Prod
    dependsOn: BuildAndPush
    jobs:
    - job: Deploy
      steps:
        - checkout: self
        - task: AzureCLI@2
          displayName: 'Login to Azure'
          inputs:
            azureSubscription: 'ACR-lcp-prod'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az account show
        - task: AzureCLI@2
          displayName: 'Deploy Prod'
          inputs:
            azureSubscription: 'ACR-lcp-prod'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az webapp config container set \
                --name $(appName_prod) \
                --resource-group $(resourceGroup_prod) \
                --multicontainer-config-type compose \
                --multicontainer-config-file "$(System.DefaultWorkingDirectory)/$(dockerComposeFile)"
    
              az webapp config appsettings set \
                --name $(appName_prod) \
                --resource-group $(resourceGroup_prod) \
                --settings DATABASE_URL="$(databaseUrl_prod)"